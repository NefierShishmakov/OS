void pthread_cleanup_push(void (*routine)(void *), void *arg);
void pthread_cleanup_pop(int execute); 
	Эти функции манипулируют стэком вызывающего их потока. Этот стэк состоит из "thread-cancellation clean-up handlers" 
	(Очень тяжело перевести на русский язык).
	"clean-up handler" - это функция, которая автоматически вызывается, при отмене потока.
	
	pthread_cleanup_push() пушит routine на верхушку стэка of clean-up handlers. 
	Когда эта routine будет вызвана ей будет передан arg в качестве аргумента.
	pthread_cleanup_pop() уберает routine с верхушки стэка of clean-up handlers и дополнительно исполняет её, 
	если execute != 0
	
	cancellation clean-up handler изымается из стэка и выполняется в следующих случаях:
		1. При отмене потока, все clean-up handlers изымаются из стэка и выполняются в обратном порядке, 
		в котором они были запушены в стэк.
		2. Когда поток завершается, вызывая pthread_exit(), все clean-up handlers выполняются как в прошлом пункте.\
		3. Когда поток вызывает pthread_cleanup_pop() с ненулевым значениемм, 
		самый верхний clean-up handler изымается из стэка и выполняется.
		
	Каждый вызов pthread_cleanup_push() должен сопровождаться соответствующим вызовом 
	парной макрокоманды pthread_cleanup_pop(). 
	Эта макрокоманда должна вызываться в пределах того же блока, 
	в котором 	была вызвана соответствующая pthread_cleanup_push(). 
	Нарушение этого требования приведет к ошибке компиляции.       
	
	Возвращаемые значения:
		Их нет
	
	Ошибки:
		Их нет